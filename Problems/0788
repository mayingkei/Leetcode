788. Rotated Digits
X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.

A number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other (on this case they are rotated in a different direction, in other words 2 or 5 gets mirrored); 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.

Now given a positive number N, how many numbers X from 1 to N are good?

---------------------------------

class Solution {
public:
    int rotatedDigits(int N) {
        vector<int> num = {0,1,8,2,5,6,9};
        int res = 0;
        
        for(int i = 1; i <= N; i++){
            int temp = i, digit;
            bool flag = false, check = false;
            
            if(temp < 10){
                if(temp == 2 || temp ==5 || temp == 6 || temp == 9){
                    res++;
                    continue;
                }
                else
                    continue;
            }
            else{
                while(temp > 0){
                    digit = temp % 10;
                    temp /= 10;

                    if(find(num.begin(), num.end(), digit) == num.end())
                        flag = true;

                    if(flag)
                        break;

                    if(digit == 2 || digit == 5 || digit == 6 || digit == 9)
                        check = true;
                }      
            }
            
            if(flag)
                continue;
            if(!flag && check)
                res++;
                   
        }
        
        return res;
        
    }
};
