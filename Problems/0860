860. Lemonade Change
At a lemonade stand, each lemonade costs $5. 

Customers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).

Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill.  You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.

Note that you don't have any change in hand at first.

Return true if and only if you can provide every customer with correct change.

----------------------------

class Solution {
public:
    bool lemonadeChange(vector<int>& bills) {
        unordered_map <int,int> m;
        bool res = true;
        
        for(int i = 0; i < bills.size(); i++){
            m[bills[i]]++;
            if(bills[i] == 10){
                m[5]--;
                if(m[5] < 0){
                    res = false;
                    break;
                }
            }
            
            if(bills[i] == 20){
                if(m[10]>0 && m[5]>0){
                    m[10]--;
                    m[5]--;
                }
                else if(m[10] == 0 && m[5] > 0){
                    m[5] -= 3;
                    if(m[5] < 0){
                        res = false;
                        break;
                    }
                }
                else{
                    res = false;
                    break;
                }
            }
            if(!res)
                break;
        }
        
        return res;
    }
};
