942. DI String Match
Given a string S that only contains "I" (increase) or "D" (decrease), let N = S.length.

Return any permutation A of [0, 1, ..., N] such that for all i = 0, ..., N-1:

If S[i] == "I", then A[i] < A[i+1]
If S[i] == "D", then A[i] > A[i+1]

--------------------------

class Solution {
public:
    vector<int> diStringMatch(string S) {
        vector<int> ans;
        int l = 0, h = S.size();
        
        for (int i = 0; i <= S.size(); i++) {
            ans.push_back(i == S.size() || S[i] == 'I' ? l++ : h--);
        }
        
        return ans;
    }
};
